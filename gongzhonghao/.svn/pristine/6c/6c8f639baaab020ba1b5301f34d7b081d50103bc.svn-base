<?php
/**
 * 1、数据收发原理及消息数据格式
 * 在开发者首次提交验证申请时，微信服务器将发送GET请求到填写的URL上，
 * 并且带上四个参数（signature、timestamp、nonce、echostr），
 * 开发者通过对签名（即signature）的效验，来判断此条消息的真实性。

 * 此后，每次开发者接收用户消息的时候，微信也都会带上前面三个参数（signature、timestamp、nonce）
 * 访问开发者设置的URL，开发者依然通过对签名的效验判断此条消息的真实性。效验方式与首次提交验证申请一致。
 * 
 * 开发者通过检验signature对请求进行校验（下面有校验方式）。若确认此次GET请求来自微信服务器，
 * 请原样返回echostr参数内容，则接入生效，成为开发者成功，否则接入失败。
 * 
 * signature	微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。
 * timestamp	时间戳
 * nonce	随机数
 * echostr	随机字符串
 * 
 * 加密/校验流程如下：
 * 1. 将token、timestamp、nonce三个参数进行字典序排序
 * 2. 将三个参数字符串拼接成一个字符串进行sha1加密
 * 3. 开发者获得加密后的字符串可与signature对比，标识该请求来源于微信
 * 
 * 2、各种收发消息的XML数据包分析
 * 1. 文本（包括表情）
 * 2. 图片
 * 3. 语音
 * 4. 视频
 * 5. 位置
 * 6. 链接
 * 
 * 3、事件消息类型
 * 目前用户在关注和取消关注，以及点击菜单的时候会自动向公众平台发送事件推送消息：
 * 1. 关注事件subscribe
 * 2. 取消关注事件unsubscribe
 * 3. 菜单点击事件CLICK
 * 
 */

header('Content-type:text');
define("TOKEN", "weixin");

$wechatObj = new wechatCallbackapiTest();
//if (!isset($_GET['echostr'])) {
	$wechatObj->responseMsg();
//}else{
//    $wechatObj->valid();//微信公众平台校验URL是否正确接入，验证完即可删除文件
//}

class wechatCallbackapiTest
{
/*    
    public function valid()
    {
        $echoStr = $_GET["echostr"];
        if($this->checkSignature()){
            echo $echoStr;
            exit;
        }
    }

    private function checkSignature()
    {
        $signature = $_GET["signature"];
        $timestamp = $_GET["timestamp"];
        $nonce = $_GET["nonce"];
        $token = TOKEN;
        $tmpArr = array($token, $timestamp, $nonce);
        sort($tmpArr);
        $tmpStr = implode($tmpArr);
        $tmpStr = sha1($tmpStr);

        if($tmpStr == $signature){
            return true;
        }else{
            return false;
        }
    }
 */

    public function responseMsg()
    {
        $postStr = $GLOBALS["HTTP_RAW_POST_DATA"];
        if (!empty($postStr)){
            $this->logger("R ".$postStr);
            $postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);//simplexml_load_string() 函数把 XML 字符串载入对象中。
            $RX_TYPE = trim($postObj->MsgType);

            switch ($RX_TYPE)
            {
                case "event":
                    $result = $this->receiveEvent($postObj);
                    break;
                case "text":
                    $result = $this->receiveText($postObj);
                    break;
            }
            $this->logger("T ".$result);
            echo $result;
        }else {
            echo "";
            exit;
        }
    }
    
    private function receiveEvent($object)
    {
        $content = "";
        switch ($object->Event)
        {
            case "subscribe":
                $content = "欢迎关注马飞工作室！";
                break;
            case "unsubscribe":
                $content = "取消关注";
                break;
        }
        //transmit 传输
        $result = $this->transmitText($object, $content);
        return $result;
    }
    
    //接收文本消息
    private function receiveText($object)
    {
        $keyword = trim($object->Content);
        $content = date("Y-m-d H:i:s",time())."\n技术支持 马飞工作室！";
        
        if(is_array($content)){
            if (isset($content[0]['PicUrl'])){
                $result = $this->transmitNews($object, $content);
            }else if (isset($content['MusicUrl'])){
                $result = $this->transmitMusic($object, $content);
            }
        }else{
            $result = $this->transmitText($object, $content);
        }

        return $result;
    }

    /**
     * 文本
        FromUserName 消息发送方
        ToUserName 消息接收方
        CreateTime 消息创建时间
        MsgType 消息类型，文本消息必须填写text
        Content 消息内容，大小限制在2048字节，字段为空为不合法请求
        FuncFlag 星标字段
     */
    private function transmitText($object, $content)
    {
        $textTpl = "<xml>
                        <ToUserName><![CDATA[%s]]></ToUserName>
                        <FromUserName><![CDATA[%s]]></FromUserName>
                        <CreateTime>%s</CreateTime>
                        <MsgType><![CDATA[text]]></MsgType>
                        <Content><![CDATA[%s]]></Content>
                    </xml>";
        $result = sprintf($textTpl, $object->FromUserName, $object->ToUserName, time(), $content);
        return $result;
    }

    /**
     * 图片
        FromUserName 消息发送方
        ToUserName 消息接收方
        CreateTime 消息创建时间
        MsgType 消息类型，图文消息必须填写news
        Content 消息内容，图文消息可填空
        ArticleCount 图文消息个数，限制为10条以内
        Articles 多条图文消息信息，默认第一个item为大图
            Title 图文消息标题
            Description 图文消息描述
            PicUrl 图片链接，支持JPG、PNG格式，较好的效果为大图640*320，小图80*80
            Url 点击图文消息跳转链接
        FuncFlag 星标字段
     */
    private function transmitNews($object, $arr_item)
    {
        if(!is_array($arr_item))
            return;

        $itemTpl = "<item>
                        <Title><![CDATA[%s]]></Title>
                        <Description><![CDATA[%s]]></Description>
                        <PicUrl><![CDATA[%s]]></PicUrl>
                        <Url><![CDATA[%s]]></Url>
                    </item>";
        $item_str = "";
        foreach ($arr_item as $item)
            $item_str .= sprintf($itemTpl, $item['Title'], $item['Description'], $item['PicUrl'], $item['Url']);

        $newsTpl = "<xml>
                        <ToUserName><![CDATA[%s]]></ToUserName>
                        <FromUserName><![CDATA[%s]]></FromUserName>
                        <CreateTime>%s</CreateTime>
                        <MsgType><![CDATA[news]]></MsgType>
                        <Content><![CDATA[]]></Content>
                        <ArticleCount>%s</ArticleCount>
                        <Articles>$item_str</Articles>
                    </xml>";

        $result = sprintf($newsTpl, $object->FromUserName, $object->ToUserName, time(), count($arr_item));
        return $result;
    }

    /**
     * 语音
        ToUserName     接收方帐号（收到的OpenID）
        FromUserName     开发者微信号
        CreateTime     消息创建时间
        MsgType          消息类型，此处为music
            Title       音乐标题
            Description 音乐描述
            MusicUrl     音乐链接
            HQMusicUrl     高质量音乐链接，WIFI环境优先使用该链接播放音乐
        FuncFlag     位0x0001被标志时，星标刚收到的消息。
     */
    private function transmitMusic($object, $musicArray)
    {
        $itemTpl = "<Music>
                        <Title><![CDATA[%s]]></Title>
                        <Description><![CDATA[%s]]></Description>
                        <MusicUrl><![CDATA[%s]]></MusicUrl>
                        <HQMusicUrl><![CDATA[%s]]></HQMusicUrl>
                    </Music>";

        $item_str = sprintf($itemTpl, $musicArray['Title'], $musicArray['Description'], $musicArray['MusicUrl'], $musicArray['HQMusicUrl']);

        $textTpl = "<xml>
                        <ToUserName><![CDATA[%s]]></ToUserName>
                        <FromUserName><![CDATA[%s]]></FromUserName>
                        <CreateTime>%s</CreateTime>
                        <MsgType><![CDATA[music]]></MsgType>
                        $item_str
                    </xml>";

        $result = sprintf($textTpl, $object->FromUserName, $object->ToUserName, time());
        return $result;
    }
    
    /**
     * 日志
     * @param type $log_content
     */
    private function logger($log_content)
    {
        if(isset($_SERVER['HTTP_APPNAME'])){   //SAE
            sae_set_display_errors(false);
            sae_debug($log_content);
            sae_set_display_errors(true);
        }else if($_SERVER['REMOTE_ADDR'] != "127.0.0.1"){ //LOCAL
            $max_size = 10000;
            $log_filename = "log.xml";
            if(file_exists($log_filename) and (abs(filesize($log_filename)) > $max_size)){unlink($log_filename);}//函数删除文件
            file_put_contents($log_filename, date('H:i:s')." ".$log_content."\r\n", FILE_APPEND);
        }
    }
}


?>