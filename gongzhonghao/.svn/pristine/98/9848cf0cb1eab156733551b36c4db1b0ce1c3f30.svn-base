<?php
require_once "jssdk.php";
$jssdk = new JSSDK("wxdd42a6cf5050a453", "af6a594dda07a6caeff9dc236c218b46");
$signPackage = $jssdk->GetSignPackage();
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title></title>
    <script src="/assets/js/zepto.js"></script>
    <script src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>
    <script src="https://res.wx.qq.com/open/libs/weuijs/1.0.0/weui.min.js"></script>
    <style>
        body{}
    </style>
</head>
<body>
    <div style="font-size: 3em">
        <div id="test1" style="background-color: cyan;text-align: center;height: 3.5em;line-height: 3.5em;">微信网页测试页面</div>
        <div id="test2" style="padding: 5px;margin: 5px 7px;">
            <div id="info1" style="margin: 2px;">信息</div>
            <div id="info2" style="margin: 2px;"></div>
        </div>
    </div>
</body>

<script>
/*
 * 注意：
 * 1. 所有的JS接口只能在公众号绑定的域名下调用，公众号开发者需要先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。
 * 2. 如果发现在 Android 不能分享自定义内容，请到官网下载最新的包覆盖安装，Android 自定义分享接口需升级至 6.0.2.58 版本及以上。
 * 3. 常见问题及完整 JS-SDK 文档地址：http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html
 *
 * 开发中遇到问题详见文档“附录5-常见错误及解决办法”解决，如仍未能解决可通过以下渠道反馈：
 * 邮箱地址：weixin-open@qq.com
 * 邮件主题：【微信JS-SDK反馈】具体问题
 * 邮件内容说明：用简明的语言描述问题所在，并交代清楚遇到该问题的场景，可附上截屏图片，微信团队会尽快处理你的反馈。
 * 
 * 通过config接口注入权限验证配置
  wx.config({
      debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
      appId: '', // 必填，公众号的唯一标识
      timestamp: , // 必填，生成签名的时间戳
      nonceStr: '', // 必填，生成签名的随机串
      signature: '',// 必填，签名，见附录1
      jsApiList: [] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
  });
 */

//通过config接口注入权限验证配置
wx.config({
    debug: true,
    appId: '<?php echo $signPackage["appId"];?>',
    timestamp: <?php echo $signPackage["timestamp"];?>,
    nonceStr: '<?php echo $signPackage["nonceStr"];?>',
    signature: '<?php echo $signPackage["signature"];?>',
    jsApiList: [
    // 所有要调用的 API 都要加到这个列表中
    'onMenuShareTimeline','openLocation','showMenuItems','hideMenuItems'
  ]
});
  
/**
 *  config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，
 *  config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，
 *  则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，
 *  则可以直接调用，不需要放在ready函数中。
 */
//通过ready接口处理成功验证
//当config函数执行成功后微信会回调wx.ready函数给通知，所有的操作一定要在wx.ready函数执行后进行
wx.ready(function () {
      
            
    //判断当前客户端版本是否支持指定JS接口
    wx.checkJsApi({
        jsApiList: ['chooseImage'], // 需要检测的JS接口列表，所有JS接口列表见附录2,
        success: function(res) {
            // 以键值对的形式返回，可用的api值true，不可用为false
            // 如：{"checkResult":{"chooseImage":true},"errMsg":"checkJsApi:ok"}
            //alert(res.checkResult.chooseImage);
            var html = '<p>'+res.checkResult.chooseImage+'</p>';
            $('#info2').append(html);
        }
    });
    
    wx.onMenuShareTimeline({
        title: '热', // 分享标题
        link: '535977672.applinzi.com', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
        imgUrl: '/assets/img/1232.JPEG', // 分享图标
        success: function () { 
            // 用户确认分享后执行的回调函数
            $('#info2').append('<p>success</p>');
        },
        cancel: function () { 
            // 用户取消分享后执行的回调函数
            $('#info2').append('<p>cancel</p>');
        }
    });
});
  

</script>
</html>

